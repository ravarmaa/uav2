<?xml version="1.0" ?>

<!--

To run this demo, you must have following arducopter repo checked out:

https://github.com/iche033/ardupilot/tree/gazebo_sitl_irlock

Compile ArduCopter with SITL mode. Instructions are similar to:

http://ardupilot.org/dev/docs/building-px4-for-linux-with-make.html

but change the make target to sitl instead of px4-v2, i.e.

$ cd ardupilot/ArduCopter && make sitl

To start simulation, first run gazebo:

gazebo worlds/iris_irlock_demo.world

Gazebo starts up paused in a black screen. To run the simulation,
setup ArduCopter and run the command below in a separate terminal:

sim_vehicle.sh -j 4 -f Gazebo

This will start mavproxy. Wait until you have a GPS lock.
You can then do the usual mavprox commands with Gazebo, e.g.

# arm the motors
STABILIZE> arm throttle

# switch to LOITER mode
STABILIZE> mode LOITER

# take off using rc command
LOITER> rc 3 1700

# wait until the irlock beacon is within the view then switch to land mode
# to begin precision landing
LOITER> mode LAND

-->

<sdf version="1.6">
  <world name="default">
    <physics name='default_physics' default='0' type='ode'>
            <ode>
                <solver>
                    <type>quick</type>
                    <iters>10</iters>
                    <sor>1.3</sor>
                    <use_dynamic_moi_rescaling>0</use_dynamic_moi_rescaling>
                </solver>
                <constraints>
                    <cfm>0</cfm>
                    <erp>0.2</erp>
                    <contact_max_correcting_vel>100</contact_max_correcting_vel>
                    <contact_surface_layer>0.001</contact_surface_layer>
                </constraints>
            </ode>
            <max_step_size>0.002</max_step_size>
            <real_time_factor>1</real_time_factor>
            <real_time_update_rate>500</real_time_update_rate>
        </physics>

      <include>
      <uri>model://sun</uri>
    </include>

    <model name="ground_plane">
      <static>true</static>
      <link name="link">
        <collision name="collision">
          <geometry>
            <plane>
              <normal>0 0 1</normal>
              <size>5000 5000</size>
            </plane>
          </geometry>
          <surface>
            <friction>
              <ode>
                <mu>1</mu>
                <mu2>1</mu2>
              </ode>
            </friction>
          </surface>
        </collision>
        <visual name="runway">
          <pose>000 0 0.005 0 0 -1.5707</pose>
          <cast_shadows>false</cast_shadows>
          <geometry>
            <plane>
              <normal>0 0 1</normal>
              <size>1829 45</size>
            </plane>
          </geometry>
          <material>
            <script>
              <uri>file://media/materials/scripts/gazebo.material</uri>
              <name>Gazebo/Runway</name>
            </script>
          </material>
        </visual>

        <visual name="grass">
          <pose>0 0 -0.1 0 0 0</pose>
          <cast_shadows>false</cast_shadows>
          <geometry>
            <plane>
              <normal>0 0 1</normal>
              <size>5000 5000</size>
            </plane>
          </geometry>
          <material>
            <script>
              <uri>file://media/materials/scripts/gazebo.material</uri>
              <name>Gazebo/Grass</name>
            </script>
          </material>
        </visual>

      </link>
    </model>

    <model name="iris">
      <pose> 0 0 0 0 0 0 </pose>
      <include>
        <uri>model://iris</uri>
         <pose> 0 0 0 0 0 0 </pose>
      </include>
    </model>
  </world>
</sdf>
